/*
 * Copyright (C) 2016 Delight Solutions Ltd., All Rights Reserved
 *  Unauthorized copying of this file, via any medium is strictly prohibited.
 *  Proprietary and confidential.
 *
 * All information contained herein is, and remains the property of Delight Solutions Kft.
 *  The intellectual and technical concepts contained herein are proprietary to Delight Solutions Kft.
 *  and may be covered by U.S. and Foreign Patents, pending patents, and are protected
 *  by trade secret or copyright law. Dissemination of this information or reproduction of
 *  this material is strictly forbidden unless prior written permission is obtained from
 *  Delight Solutions Kft.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: 'dependencies.gradle'

buildscript {
  apply from: 'dependencies.gradle'
  repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
//    classpath gradlePlugins.android
    // Compile-time annotation processing.
//    classpath gradlePlugins.apt
//    classpath gradlePlugins.retrolambda
    //Rxjava Debugging tool
//    classpath 'com.fernandocejas.frodo:frodo-plugin:0.8.3'
    //Gradle build scan
//    classpath 'com.gradle:build-scan-plugin:1.0'
  }
}

/*apply plugin: 'com.gradle.build-scan'
buildScan {
  licenseAgreementUrl = 'https://gradle.com/terms-of-service'
  licenseAgree = 'yes'
}*/

allprojects {
  repositories {
    jcenter()
  }

  // print errors from test in the terminal
  tasks.withType(Test) {
    testLogging {
      displayGranularity = 2
      showStackTraces = true
      showCauses = true
      showExceptions = true
      exceptionFormat = "full"
      stackTraceFilters = ["entry_point", "truncate"]
      events "passed", "skipped", "failed"
    }
  }
}

allprojects.each { p ->
  println "$p.name - mindSdkVersion=${minSdk()}"
  println()
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
